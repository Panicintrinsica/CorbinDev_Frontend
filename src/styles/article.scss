@use "sass:color";
@use "sass:map";

.article-list {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

article .meta-row {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;

  .meta-item {
    display: flex;
    gap: .3rem;

    .meta-label {
      font-family: var(--headerFont), sans-serif;
      color: var(--secondary)
    }

    .meta-data {
      color: var(--bodyColor);
      opacity: .5;
    }

  }
}

article.blog {
  header.blog-header {

  }

  section.blog-meta {
    display: flex;
    align-items: center;
    margin: 6px 0;
  }

  .blog-category {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .blog-label {
    margin-right: .5rem;
  }

  section.blog-body {

  }

  footer.blog-footer {
    display: flex;
    gap: 1rem;
  }
}

article.project {

  header.project-header {
    display: flex;
    align-items: center;
    padding: .33rem .5rem;
    gap: .5rem;

    &.personal {
      background: var(--personal-gradient);
    }

    &.professional {
      background: var(--professional-gradient);
    }

    &.openSource {
      background: var(--openSource-gradient);
    }

    &.educational {
      background: var(--educational-gradient);
    }

    .group {
      font-family: var(--uiFont), serif;
      opacity: 0.33;
      @media screen and (max-width: 640px) {
        display: none;
      }

    }
  }

  section.project-body {
    padding-top: 6px;
    padding-bottom: 6px;
  }

}

article.skills {
  header.skills-header {
    flex-wrap: wrap;
    align-items: center;
    padding: 12px 12px 0 12px;
    gap: 0;
  }

  section.skills-body {
    padding: 12px;
  }
}

$admonition-types: (
  note:      rgb(89, 89, 255),
  abstract:  rgb(0, 255, 255),
  info:      rgb(0, 119, 255),
  todo:      rgb(0, 103, 255),
  tip:       rgb(0, 233, 255),
  success:   rgb(0, 255, 13),
  question:  rgb(246, 176, 0),
  warning:   rgb(255, 77, 0),
  failure:   rgb(255, 0, 0),
  bug:       rgb(255, 72, 0),
  danger:    rgb(255, 0, 0),
  example:   rgb(116, 77, 255)
);

.admonition {
  border-left: 6px solid color.scale(map.get($admonition-types, note), $alpha: -30%); // Default to 'note' type
  background: color.scale(map.get($admonition-types, note), $alpha: -70%); // Default to 'note' type

  .admonition-title {
    background: color.scale(map.get($admonition-types, note), $alpha: -80%); // Default to 'note' type
    padding-left: .5rem;
    font-variant: small-caps;
    color: color.scale(map.get($admonition-types, note), $alpha: -10%); // Default to 'note' type
  }

  .admonition-content {
    padding: 0.5rem;
  }

  @each $type, $color in $admonition-types {
    &-#{$type} {
      border-left-color: color.scale($color, $alpha: -30%);
      background-color: color.scale($color, $alpha: -70%);

      .admonition-title {
        background-color: color.scale($color, $alpha: -80%);
        color: color.scale($color, $alpha: -10%);
      }
    }
  }
}

$languages: 'html', 'ts', 'js';

@each $name in $languages {
  pre.language-#{$name} {

    &::before {
      content: '.#{$name}';
      display: block;
      margin: -1em -1em 1em -1em;
      padding: 0 0.5em;
      font-weight: bold;
      color: rgba(255, 255, 255, 0.5);
      background: rgba(0, 0, 0, 0.3);
      border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    }
  }
}
